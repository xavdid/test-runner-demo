config:
  command: bash -l
  cwd: /Users/david/projects/test-runner-demo
  env:
    recording: true
  cols: 108
  rows: 23
  repeat: 0
  quality: 100
  frameDelay: auto
  maxIdleTime: 2000
  frameBox:
    type: floating
    title: universal-test-runner
    style:
      border: 0px black solid
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9
  cursorStyle: block
  fontFamily: Monaco, Lucida Console, Ubuntu Mono, Monospace
  fontSize: 12
  lineHeight: 1
  letterSpacing: 0
  theme:
    background: transparent
    foreground: '#afafaf'
    cursor: '#c7c7c7'
    black: '#232628'
    red: '#fc4384'
    green: '#b3e33b'
    yellow: '#ffa727'
    blue: '#75dff2'
    magenta: '#ae89fe'
    cyan: '#708387'
    white: '#d5d5d0'
    brightBlack: '#626566'
    brightRed: '#ff7fac'
    brightGreen: '#c8ed71'
    brightYellow: '#ebdf86'
    brightBlue: '#75dff2'
    brightMagenta: '#ae89fe'
    brightCyan: '#b1c6ca'
    brightWhite: '#f9f9f4'
records:
  - delay: 0
    content: '% '
  - delay: 75
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: c
  - delay: 75
    content: l
  - delay: 75
    content: o
  - delay: 75
    content: j
  - delay: 75
    content: u
  - delay: 75
    content: r
  - delay: 75
    content: e
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> lien test\e[0m\r\n"
  - delay: 500
    content: "\r\nlein test demo-test\r\n\r\nRan 1 tests containing 1 assertions.\r\n0 failures, 0 errors.\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 1000
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: e
  - delay: 75
    content: l
  - delay: 75
    content: i
  - delay: 75
    content: x
  - delay: 75
    content: i
  - delay: 75
    content: r
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> mix test\e[0m\r\n"
  - delay: 500
    content: "\r\nHelloWorldTest [test/hello_world_test.exs]\r\n  * test does basic math [L#4]\\e[32m\r  * test does basic math (0.3ms) [L#4]\e[0m\r\n\r\nFinished in 0.00 seconds (0.00s async, 0.00s sync)\r\n\e[32m1 test, 0 failures\e[0m\r\n\r\nRandomized with seed 208318\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 1000
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: g
  - delay: 75
    content: o
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> go test ./...\e[0m\r\n"
  - delay: 500
    content: "ok  \tdemo/demo\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 1000
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: j
  - delay: 75
    content: s
  - delay: 75
    content: /
  - delay: 75
    content: 'n'
  - delay: 75
    content: p
  - delay: 75
    content: m
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> npm test\e[0m\r\n"
  - delay: 500
    content: "\r\n> npm@1.0.0 test\r\n> echo 'running tests with npm!'\r\n\r\nrunning tests with npm!\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 1000
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: j
  - delay: 75
    content: s
  - delay: 75
    content: /
  - delay: 75
    content: 'y'
  - delay: 75
    content: a
  - delay: 75
    content: r
  - delay: 75
    content: 'n'
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> yarn test\e[0m\r\n"
  - delay: 500
    content: "\e[2K\e[1G\e[1myarn run v1.22.19\e[22m\r\n\e[2K\e[1G\e[2m$ echo 'running tests with yarn!'\e[22m\r\nrunning tests with yarn!\r\n\e[2K\e[1Gâœ¨  Done in 0.02s.\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 1000
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: j
  - delay: 75
    content: s
  - delay: 75
    content: /
  - delay: 75
    content: p
  - delay: 75
    content: 'n'
  - delay: 75
    content: p
  - delay: 75
    content: m
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> pnpm test\e[0m\r\n"
  - delay: 500
    content: "\r\n> npm@1.0.0 test /Users/david/projects/test-runner-demo/js/pnpm\r\n> echo 'running tests with pnpm!'\r\n\r\nrunning tests with pnpm!\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 1000
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: m
  - delay: 75
    content: a
  - delay: 75
    content: k
  - delay: 75
    content: e
  - delay: 75
    content: f
  - delay: 75
    content: i
  - delay: 75
    content: l
  - delay: 75
    content: e
  - delay: 75
    content: s
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> make test\e[0m\r\n"
  - delay: 500
    content: "running test script in Makefile!\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 1000
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: p
  - delay: 75
    content: 'y'
  - delay: 75
    content: t
  - delay: 75
    content: h
  - delay: 75
    content: o
  - delay: 75
    content: 'n'
  - delay: 75
    content: '-'
  - delay: 75
    content: d
  - delay: 75
    content: j
  - delay: 75
    content: a
  - delay: 75
    content: 'n'
  - delay: 75
    content: g
  - delay: 75
    content: o
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> ./manage.py test\e[0m\r\n"
  - delay: 500
    content: ".\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.000s\r\n\r\nOK\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 1000
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: p
  - delay: 75
    content: 'y'
  - delay: 75
    content: t
  - delay: 75
    content: h
  - delay: 75
    content: o
  - delay: 75
    content: 'n'
  - delay: 75
    content: '-'
  - delay: 75
    content: p
  - delay: 75
    content: 'y'
  - delay: 75
    content: t
  - delay: 75
    content: e
  - delay: 75
    content: s
  - delay: 75
    content: t
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> pytest\e[0m\r\n"
  - delay: 500
    content: "\e[1m================================== test session starts ====================================\e[0m\r\nplatform darwin -- Python 3.11.0, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /Users/david/projects/test-runner-demo/python-pytest\r\n\e[1mcollecting ... \e[0m\e[1m\rcollected 1 item                                                                                      \e[0m\r\n\r\ntest_add.py \e[32m.\e[0m\e[32m                                                                        [100%]\e[0m\r\n\r\n\e[32m=================================== \e[32m\e[1m1 passed\e[0m\e[32m in 0.00s\e[0m\e[32m =====================================\e[0m\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 1000
    content: c
  - delay: 75
    content: d
  - delay: 75
    content: ' '
  - delay: 75
    content: .
  - delay: 75
    content: .
  - delay: 75
    content: /
  - delay: 75
    content: r
  - delay: 75
    content: u
  - delay: 75
    content: s
  - delay: 75
    content: t
  - delay: 50
    content: "\r\n% "
  - delay: 400
    content: t
  - delay: 300
    content: "\r\n\e[2m-> cargo test\e[0m\r\n"
  - delay: 500
    content: "\e[0m\e[0m\e[1m\e[32m    Finished\e[0m test [unoptimized + debuginfo] target(s) in 0.00s\r\n\e[0m\e[0m\e[1m\e[32m     Running\e[0m tests/demo.rs (target/debug/deps/demo-8a20e670b520f4bc)\r\n\r\nrunning 1 test\r\ntest basic_math ... \e[32mok\e(B\e[m\r\n\r\ntest result: \e[32mok\e(B\e[m. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n\r\n"
  - delay: 50
    content: "\r\n% "
  - delay: 2500
    content: ' '
